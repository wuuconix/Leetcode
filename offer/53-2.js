/**剑指 Offer 53 - II. 0～n-1中缺失的数字
 * 简单
 * 一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。

    示例 1:
    输入: [0,1,3]
    输出: 2

    示例 2:
    输入: [0,1,2,3,4,5,6,7,9]
    输出: 8
     
    限制：
    1 <= 数组长度 <= 10000
 * @param {number[]} nums
 * @return {number}
 * 二分一把梭，去比较 nums[m] 和m的关系，实际上由于这道题的特殊性，他们之间只有两种可能性，要么是 nums[m] 大，说明 左侧少了一个值，我们需要去 j = m -1
 * 而相同的情况下，缺的值肯定在右侧，我们需要 i = m + 1。
 * 56 ms 95.24%
 * 43.2 MB 29.76%
 */
var missingNumber = function(nums) {
    let i = 0, j = nums.length - 1
    while (i <= j) {
        let m = Math.floor((i + j) / 2)
        if (m < nums[m]) //说明缺少的数字在左侧
            j = m - 1
        else //左侧没少，继续查看右侧 实际上这里可写成 else if (m == nums[m])
            i = m + 1 
    }
    return i //和53题总结的一样，最后的是返回i还是j，看的就是等于情况下，给谁变化
};

console.log(missingNumber([0,1,2,3,4,5,6,7,9]));